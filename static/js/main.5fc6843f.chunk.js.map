{"version":3,"sources":["logo.svg","components/QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteBox","props","state","quoteIndex","quoteArr","quote","author","changeQuote","bind","fetch","response","json","data","this","setState","Math","floor","random","length","randomIndex","id","onClick","icon","faLightbulb","href","encodeURIComponent","target","faTwitter","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAe,I,2FCKFA,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAY,EACZC,SAAU,CAAC,CAAEC,MAAO,iBAAkBC,OAAQ,qBAElD,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBANJ,EADvB,wLAYY,yIAZZ,SAa+BC,MADnB,0IAZZ,cAacC,EAbd,gBAc2BA,EAASC,OAdpC,OAccC,EAdd,OAeQC,KAAKC,SAAS,CACVX,WAAYY,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,QAC5Cd,SAAUQ,IAjBtB,0IAsBQC,KAAKC,UAAS,SAACZ,GAGX,IAFA,IAAIiB,EAAcJ,KAAKC,MAAMD,KAAKE,SAAWf,EAAME,SAASc,QAErDC,GAAejB,EAAMC,YACxBgB,EAAcJ,KAAKC,MAAMD,KAAKE,SAAWf,EAAME,SAASc,QAE5D,MAAO,CACHf,WAAYgB,EACZf,SAAUF,EAAME,eA9BhC,+BAoCQ,IAAMC,EAAQQ,KAAKX,MAAME,SAASS,KAAKX,MAAMC,YAAYE,MACnDC,EAASO,KAAKX,MAAME,SAASS,KAAKX,MAAMC,YAAYG,OAC1D,OACI,gCACI,iDACA,mBAAGc,GAAG,OAAN,SAAc,IAAMf,EAAQ,MAC5B,mBAAGe,GAAG,SAAN,SAAgB,IAAMd,IACtB,sBAAKc,GAAG,UAAR,UACI,yBAAQA,GAAG,YAAYC,QAASR,KAAKN,YAArC,UACI,cAAC,IAAD,CAAiBe,KAAMC,MAD3B,iBAGA,2CACe,IACX,oBACIC,KACI,yDACAC,mBAAmB,IAAMpB,EAAQ,KAAOC,GAE5Cc,GAAG,cACHM,OAAO,SANX,UAQI,cAAC,IAAD,CAAiBJ,KAAMK,MAR3B,wBAYR,iCACI,qEA9DpB,GAA8BC,IAAMC,WCOrBC,MARf,WACE,OACE,qBAAKV,GAAG,YAAR,SACE,cAAC,EAAD,OCKSW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fc6843f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faLightbulb } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport class QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            quoteIndex: 0,\r\n            quoteArr: [{ quote: \"Fetching quote\", author: \"Fetching author\" }]\r\n        };\r\n        this.changeQuote = this.changeQuote.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const url =\r\n            \"https://gist.githubusercontent.com/dev-alexh/dfb3c7d3c5fdcb4978e826b99537bd19/raw/655a48f996936aa20adb024fa0db32e5c8a38a33/quotes.json\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({\r\n            quoteIndex: Math.floor(Math.random() * data.length),\r\n            quoteArr: data\r\n        });\r\n    }\r\n\r\n    changeQuote() {\r\n        this.setState((state) => {\r\n            var randomIndex = Math.floor(Math.random() * state.quoteArr.length);\r\n            //different index from previous index\r\n            while (randomIndex == state.quoteIndex) {\r\n                randomIndex = Math.floor(Math.random() * state.quoteArr.length);\r\n            }\r\n            return {\r\n                quoteIndex: randomIndex,\r\n                quoteArr: state.quoteArr\r\n            };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const quote = this.state.quoteArr[this.state.quoteIndex].quote;\r\n        const author = this.state.quoteArr[this.state.quoteIndex].author;\r\n        return (\r\n            <div>\r\n                <h1>Everyday Quotes</h1>\r\n                <p id=\"text\">{'\"' + quote + '\"'}</p>\r\n                <p id=\"author\">{\"-\" + author}</p>\r\n                <div id=\"actions\">\r\n                    <button id=\"new-quote\" onClick={this.changeQuote}>\r\n                        <FontAwesomeIcon icon={faLightbulb} /> Inspire Me\r\n                    </button>\r\n                    <p>\r\n                        Inspiring?{\" \"}\r\n                        <a\r\n                            href={\r\n                                \"https://twitter.com/intent/tweet?hashtags=quotes&text=\" +\r\n                                encodeURIComponent('\"' + quote + '\" ' + author)\r\n                            }\r\n                            id=\"tweet-quote\"\r\n                            target=\"_blank\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faTwitter} /> Tweet this!\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n                <footer>\r\n                    <p> Alex H, 2020. freeCodeCamp</p>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport { QuoteBox } from './components/QuoteBox';\n\nfunction App() {\n  return (\n    <div id=\"quote-box\">\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}